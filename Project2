Please note that it would be preferable to avoid relying on built-in methods such as collections, shuffle 
in Java, or arrow functions of JavaScript. Instead, creating a method or function from scratch and using 
your own logic in the assignment would be worth considering.

Java:
A. Shuffling an array:
import java.util.Random;

public class ShuffleArray {
    public static void shuffleArray(int[] arr) {
        Random rnd = new Random();
        for (int i = arr.length - 1; i > 0; i--) {
            int index = rnd.nextInt(i + 1);
            int temp = arr[index];
            arr[index] = arr[i];
            arr[i] = temp;
        }
    }

    public static void main(String[] args) {
        int[] arr = {1, 2, 3, 4, 5, 6, 7};
        shuffleArray(arr);
        for (int num : arr) {
            System.out.print(num + " ");
        }
    }
}

B. Convert Roman Number to Integer:

import java.util.HashMap;

public class RomanToInteger {
    public static int romanToInt(String s) {
        HashMap<Character, Integer> romanValues = new HashMap<>();
        romanValues.put('I', 1);
        romanValues.put('V', 5);
        romanValues.put('X', 10);
        romanValues.put('L', 50);
        romanValues.put('C', 100);
        romanValues.put('D', 500);
        romanValues.put('M', 1000);

        int result = 0;
        int prevValue = 0;

        for (int i = s.length() - 1; i >= 0; i--) {
            int currentValue = romanValues.get(s.charAt(i));
            if (currentValue < prevValue) {
                result -= currentValue;
            } else {
                result += currentValue;
            }
            prevValue = currentValue;
        }
        return result;
    }

    public static void main(String[] args) {
        String romanNumeral = "IX";
        int integerEquivalent = romanToInt(romanNumeral);
        System.out.println("Integer Equivalent: " + integerEquivalent);
    }
}

C. Check if the input is a pangram:

import java.util.HashSet;

public class PangramChecker {
    public static boolean isPangram(String input) {
        String lowerCaseInput = input.toLowerCase();
        HashSet<Character> set = new HashSet<>();
        for (int i = 0; i < lowerCaseInput.length(); i++) {
            char c = lowerCaseInput.charAt(i);
            if (Character.isLetter(c)) {
                set.add(c);
            }
        }
        return set.size() == 26;
    }

    public static void main(String[] args) {
        String sentence = "The quick brown fox jumps over the lazy dog";
        boolean isPangram = isPangram(sentence);
        System.out.println("Is Pangram: " + isPangram);
    }
}



JavaScript:
A. Reverse every word in a sentence:
function reverseWords(sentence) {
    const words = sentence.split(" ");
    const reversedWords = words.map(word => {
        return word.split("").reverse().join("");
    });
    return reversedWords.join(" ");
}

const inputSentence = "This is a sunny day";
const reversedSentence = reverseWords(inputSentence);
console.log(reversedSentence);

B. Sort an array in descending order:
function sortDescending(arr) {
    arr.sort((a, b) => b - a);
}

const numbers = [5, 2, 9, 1, 3];
sortDescending(numbers);
console.log(numbers);

HTML:
A. Basic Calculator using HTML, CSS, and JavaScript:

Here's a basic HTML structure for a calculator:

<!DOCTYPE html>
<html>
<head>
    <title>Basic Calculator</title>
    <style>
        /* Add CSS styles here */
    </style>
</head>
<body>
    <div class="calculator">
        <input type="text" id="display" disabled>
        <button onclick="clearDisplay()">C</button>
        <button onclick="appendToDisplay('1')">1</button>
        <button onclick="appendToDisplay('2')">2</button>
        <button onclick="appendToDisplay('+')">+</button>
        <!-- Add more buttons and functionality for other operations -->
        <button onclick="calculate()">=</button>
    </div>

    <script>
        // Add JavaScript logic for calculator operations
        function clearDisplay() {
            document.getElementById('display').value = '';
        }

        function appendToDisplay(value) {
            document.getElementById('display').value += value;
        }

        function calculate() {
            try {
                const result = eval(document.getElementById('display').value);
                document.getElementById('display').value = result;
            } catch (error) {
                document.getElementById('display').value = 'Error';
            }
        }
    </script>
</body>
</html>




